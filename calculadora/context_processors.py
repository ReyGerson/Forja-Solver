"""
Context processors para agregar variables globales a todas las plantillas.
"""

def language_context(request):
    """
    Agrega el idioma actual del usuario y las traducciones básicas al contexto de todas las plantillas.
    """
    # Idioma por defecto
    current_language = 'es'
    
    # Si el usuario está autenticado y tiene perfil, usar su idioma preferido
    if request.user.is_authenticated:
        try:
            if hasattr(request.user, 'userprofile'):
                current_language = request.user.userprofile.idioma_preferido
            else:
                # Si no tiene perfil, crearlo con idioma por defecto
                from .user_profile import UserProfile
                profile = UserProfile.objects.create(user=request.user)
                current_language = profile.idioma_preferido
        except Exception as e:
            # En caso de error, usar idioma por defecto
            current_language = 'es'
    
    # Traducciones básicas para el navbar y elementos comunes
    translations = {
        'es': {
            'inicio': 'Inicio',
            'logout': 'Cerrar Sesión',
            'profile': 'Perfil',
            'premium': 'Premium',
            'store': 'Tienda',
            'documentation': 'Documentación',
            'history': 'Historial',
            'spanish': 'Español',
            'english': 'Inglés',
            'language': 'Idioma',
            'methods': 'Métodos',
            'fixed_point': 'Punto Fijo',
            'cubic_spline': 'Trazador Cúbico',
            'simplex': 'Simplex',
            'graphic_method': 'Método Gráfico',
            'gran_m': 'Gran M',
            'welcome': 'Bienvenido',
            'numerical_methods': 'Métodos Numéricos',
            'solver': 'Solucionador',
            'credits': 'Créditos',
            'export_pdf': 'Exportar PDF',
            'calculate': 'Calcular',
            'clear': 'Limpiar',
            'save': 'Guardar',
            'edit': 'Editar',
            'delete': 'Eliminar',
            'close': 'Cerrar',
            'error': 'Error',
            'success': 'Éxito',
            'warning': 'Advertencia',
            'info': 'Información',
            'loading': 'Cargando...',
            'search': 'Buscar',
            'filters': 'Filtros',
            'date': 'Fecha',
            'user': 'Usuario',
            'result': 'Resultado',
            'details': 'Detalles',
            'back': 'Volver',
            'next': 'Siguiente',
            'previous': 'Anterior',
            'page': 'Página',
            'total': 'Total',
            'no_data': 'No hay datos disponibles',
            'confirm': 'Confirmar',
            'cancel': 'Cancelar',
            # Traducciones para index
            'index_title': 'Métodos Numéricos',
            'fixed_point_desc': 'Método iterativo para encontrar raíces de ecuaciones',
            'cubic_spline_desc': 'Interpolación por splines cúbicos',
            'premium_store': 'Tienda Premium',
            'premium_store_desc': 'Desbloquea funciones avanzadas',
            'docs_cubic': 'Docs Trazadores',
            'docs_cubic_desc': 'Documentación técnica del método',
            'docs_fixed_point': 'Docs Punto Fijo',
            'docs_fixed_point_desc': 'Teoría y ejemplos del método',
            'user_registration': 'Registro de Usuario',
            'user_registration_desc': 'Crea una cuenta con tus datos y foto de perfil',
            'my_profile': 'Mi Perfil',
            'my_profile_desc': 'Consulta y gestiona tus datos personales',
            'edit_profile': 'Editar Perfil',
            'edit_profile_desc': 'Actualiza tu información y fotografía',
            'project_credits': 'Créditos del Proyecto',
            'project_credits_desc': 'Conoce a los desarrolladores y sus roles',
            'simplex_method': 'Método Simplex',
            'simplex_method_desc': 'Optimización lineal usando el método simplex',
            'docs_simplex': 'Docs Método Simplex',
            'docs_simplex_desc': 'Documentación técnica del método',
            'docs_big_m': 'Docs Método de la M',
            'docs_big_m_desc': 'Documentación técnica del método',
            'docs_graphic': 'Docs Método Gráfico',
            'docs_graphic_desc': 'Documentación técnica del método',
            'graphic_method_nav': 'Método Gráfico',
            'big_m_method': 'Método de la Gran M',
            # Simplex Method Page
            'simplex_title': 'Método Simplex',
            'view_history': 'Ver Historial',
            'simplex_limitations': 'Limitaciones del Método Simplex General',
            'maximization': 'Maximización',
            'minimization': 'Minimización',
            'only_le_constraints': 'Solo restricciones del tipo ≤ (menor o igual)',
            'requires_advanced': 'Requiere métodos avanzados (Gran M o Dos Fases)',
            'bj_values': 'Valores Bj',
            'non_negative': 'Deben ser no negativos',
            'conditions_note': 'Si su problema no cumple estas condiciones, use el Método de la Gran M.',
            'preloaded_examples': 'Ejemplos Precargados',
            'production_example': 'Ejemplo 1: Producción',
            'transport_example': 'Ejemplo 2: Transporte',
            'manufacturing_example': 'Ejemplo 3: Manufactura',
            'tip_examples': 'Haz clic en cualquier ejemplo para cargar los datos automáticamente. Luego puedes editarlos antes de resolver.',
            'problem_variables': 'Variables del problema (máximo 10)',
            'add_variable': 'Agregar Variable',
            'remove_variable': 'Quitar Variable',
            'variable_examples': 'Ejemplos de nombres: perros, camiones, h, producto_A, x1, etc. Solo letras, números y guiones bajos.',
            'objective_function': 'Función objetivo (Z)',
            'maximize': 'Maximizar',
            'subject_to': 'Sujeto a (máximo 10 restricciones)',
            'add_constraint': 'Agregar Restricción',
            'remove_constraint': 'Quitar Restricción',
            'constraints_counter': 'restricciones',
            'solve': 'Resolver',
            'new_problem': 'Nuevo Problema',
            'free_version_warning': 'Versión Gratuita - Solo Resultado Final',
            'premium_benefits': 'Estás viendo la versión limitada. Con Premium puedes acceder a:',
            'detailed_iterations': 'Todas las iteraciones detalladas del algoritmo',
            'complete_model': 'Modelo matemático completo con variables de holgura',
            'step_by_step': 'Proceso paso a paso de cada operación',
            'all_tables': 'Tabla inicial y todas las tablas intermedias',
            'upgrade_premium': 'Actualizar a Premium',
            # Documentation Pages
            'simplex_documentation': 'Documentación del Método Simplex',
            'big_m_documentation': 'Documentación del Método de la Gran M',
            'graphic_documentation': 'Documentación del Método Gráfico',
            'back_to_home': 'Inicio',
            
            # Contenido de documentación Simplex
            'method_objective': 'Objetivo del método',
            'method_objective_desc': 'Encontrar la solución óptima para un problema de programación lineal, ya sea maximización o minimización a una función de costos, ganancias, producción, estando sujetos a ciertas restricciones. Buscando el mejor punto dentro de un espacio definido con respecto a dichas restricciones que cumplan con el criterio de optimización.',
            'advantages': 'Ventajas',
            'adv_1': 'Es basado en consideraciones geométricas y no requiere el uso de derivadas de la función objetivo.',
            'adv_2': 'Es fácil de usar y tiene un alto grado de efectividad.',
            'adv_3': 'Se puede usar con funciones objetivo ya que las primeras iteraciones se busca el mínimo ampliamente y evitan mínimos fácilmente.',
            'adv_4': 'Es eficaz y se ajusta a varios parámetros.',
            'adv_5': 'Garantiza una solución óptima o determina que no hay una solución.',
            'disadvantages': 'Desventajas',
            'disadv_1': 'Aunque es eficiente para problemas lineales, puede no ser adecuado para problemas con funciones no lineales o restricciones no lineales.',
            'disadv_2': 'La elección inicial de la solución básica puede afectar el rendimiento del método, encontrar una buena solución inicial puede ser difícil en ciertos casos.',
            'disadv_3': 'En problemas muy grandes o complejos el método simplex puede necesitar una cantidad importante de recursos computacionales lo que puede llegar a limitar su aplicación.',
            'use_situations': 'Situaciones de uso',
            'use_case_production': 'Planificación de producción',
            'use_case_production_desc': 'Determinar la cantidad óptima de diferentes productos a fabricar para maximizar ganancias o minimizar costos.',
            'use_case_inventory': 'Gestión de inventario',
            'use_case_inventory_desc': 'Decidir los niveles óptimos de inventario para satisfacer la demanda mientras se minimizan los costos de almacenamiento.',
            'use_case_resources': 'Asignación de recursos',
            'use_case_resources_desc': 'Ayuda a asignar presupuesto de manera óptima entre diferentes canales y medios.',
            'use_case_costs': 'Optimización de costos',
            'use_case_costs_desc': 'Encontrar la forma más económica de realizar una tarea o proceso, considerando diferentes variables y restricciones.',
            'algorithm_steps': 'Pasos para realizar el algoritmo',
            'step_1': '1. Definir el problema en la forma estándar y generar matriz',
            'step_1_desc': 'Un programa de programación lineal tiene la siguiente forma:',
            'objective_function_doc': 'Función objetivo:',
            'maximize_minimize': '(Maximizar o minimizar)',
            'subject_to_doc': 'Sujeto a:',
            'where_variables': 'Donde x₁, x₂, ..., xₙ son las variables del problema y luego se verifica que todas las restricciones tienen el lado derecho no negativo, es decir:',
            'add_slack_variables': 'Agregar variables de holgura:',
            'converts_restrictions': 'Convierte las restricciones en ecuaciones.',
            'example_doc': 'Ejemplo:',
            'step_2': '2. Construir la tabla inicial del Simplex',
            'includes': 'Incluye:',
            'basic_variables': 'Variables básicas (VB)',
            'objective_coefficients': 'Coeficientes de la función objetivo (Z)',
            'restriction_coefficients': 'Coeficientes de las restricciones',
            'right_side_results': 'Resultados del lado derecho (LD)',
            'z_c_row': 'Fila de "Z - C"',
            'step_3': '3. Identificar la columna pivote (variable entrante)',
            'step_3_desc': 'Selecciona el coeficiente más negativo en la fila Z - C. Es la variable que entrará a la base.',
            'step_4': '4. Identificar la fila pivote (variable saliente)',
            'step_4_desc_1': 'Divide los valores del lado derecho entre los valores positivos de la columna pivote.',
            'step_4_desc_2': 'Elige el menor coeficiente positivo. Esa fila corresponde a la variable que sale de la base.',
            'step_5': '5. Realizar el pivoteo (actualizar la tabla)',
            'step_5_desc_1': 'Cuando todos los elementos de Z - C sean mayores o iguales a 0 (para maximización), la solución es óptima.',
            'step_5_desc_2': 'El valor óptimo está en la columna LD, correspondiente a Z.',
            'step_5_desc_3': 'Las variables básicas dan su valor en la solución, las no básicas son cero.',
            'add_slack_variables_example': 'Agregar variables de holgura s₁ y s₂',
            'rewrite_objective': 'Reescribir la función objetivo:',
            'initial_simplex_table': 'Tabla inicial del Simplex',
            'outgoing_variable': 'Variable saliente:',
            'pivot_number': 'Número pivote:',
            'update_table': 'Actualizar la tabla (pivoteo)',
            'new_row': 'Nueva fila',
            'final_result': 'Resultado final',
            
            # Simplex Historial Page
            'simplex_history': 'Historial del Método Simplex',
            'no_history_data': 'No hay datos en el historial',
            'calculation_date': 'Fecha de Cálculo',
            'objective_type': 'Tipo de Objetivo',
            'objective_function_label': 'Función Objetivo',
            'restrictions_label': 'Restricciones',
            'optimal_solution': 'Solución Óptima',
            'z_value': 'Valor de Z',
            'view_details': 'Ver Detalles',
            'repeat_calculation': 'Repetir Cálculo',
            'delete_record': 'Eliminar',
            'premium_history_note': 'Con Premium puedes ver todas las iteraciones detalladas',
            'go_to_simplex': 'Ir al Método Simplex',
            'confirm_delete': '¿Estás seguro de que quieres eliminar este registro?',
            'no_data_message': 'Aún no has resuelto ningún problema con el método Simplex',
            'start_calculating': 'Comienza calculando tu primer problema',
            
            # Common Documentation Terms
            'method_objective': 'Objetivo del método',
            'advantages': 'Ventajas',
            'disadvantages': 'Desventajas',
            'when_to_use': 'Cuándo usar este método',
            'step_by_step': 'Procedimiento paso a paso',
            'examples': 'Ejemplos',
            'bibliography': 'Bibliografía',
            'references': 'Referencias',
            'mathematical_formulation': 'Formulación Matemática',
            'algorithm_description': 'Descripción del Algoritmo',
            'optimal_variables': 'Variables Óptimas',
            'load_problem': 'Cargar Problema',
            'export_pdf': 'Exportar PDF',
            'premium_feature_locked': 'Funcionalidad Premium',
            'no_problems_history': 'No hay problemas en el historial',
            'solve_first_problem': 'Resuelve tu primer problema del método simplex para ver el historial aquí.',
            'solve_first_problem_btn': 'Resolver Primer Problema',
            'limited_functionality': 'Funcionalidad Limitada',
            'free_user_note': 'Como usuario gratuito, solo puedes ver los resultados finales de tus problemas anteriores.',
            'with_premium': 'Con Premium puedes:',
            'view_iterations': 'Ver todas las iteraciones paso a paso',
            'access_complete_process': 'Acceder al proceso completo de resolución',
            'detailed_analysis': 'Análisis detallado de cada tabla',
            'restrictions': 'Restricciones',
            'original_mathematical_model': 'Modelo Matemático Original',
            'initial_table_title': 'Tabla Inicial del Método Simplex',
            'final_result': 'Resultado Final',
            'iteration': 'Iteración',
            'table': 'Tabla',
            'general_objective_function': 'Función Objetivo en Forma General',
            'function_z_zero': 'Función Z igualada a cero',
            'model_with_slack_variables': 'Modelo con Variables de Holgura',
            'algorithm_iterations': 'Iteraciones del Algoritmo',
            'entering_variable': 'Variable que entra',
            'leaving_variable': 'Variable que sale',
            'pivot_element': 'Elemento pivote',
            'operations_performed': 'Operaciones realizadas',
            'normalization_of': 'Normalización de',
            'update_of': 'Actualización de',
            'factor': 'factor',
            'optimal_solution_found': '¡Solución Óptima Encontrada!',
            'all_coefficients_non_negative': 'Todos los coeficientes en la fila Z son no negativos.',
            'optimal_solution_title': 'Solución Óptima',
            'maximum_value_z': 'Valor máximo de Z',
            'minimum_value_z': 'Valor mínimo de Z',
            'results_interpretation': 'Interpretación de los Resultados',
            'decision_variables': 'Variables de decisión',
            'decision_variables_desc': 'Los valores óptimos de las variables originales del problema',
            'slack_variables': 'Variables de holgura',
            'slack_variables_desc': 'Representan los recursos no utilizados en cada restricción',
            'z_value_max_desc': 'El valor máximo alcanzado por la función objetivo',
            'z_value_min_desc': 'El valor mínimo alcanzado por la función objetivo',
            'iterations_desc': 'Cada paso del algoritmo muestra cómo se mejora la solución',
            'original_objective_function': 'Función objetivo',
            'restrictions_label_colon': 'Restricciones',
            'error_title': 'Error',
            'please_enter_objective_function': 'Por favor, ingrese la función objetivo.',
            'min_two_variables_required': 'Se requieren al menos 2 variables.',
            'max_variables_reached': 'No se pueden agregar más variables (máximo 10).',
            'min_two_constraints_required': 'Se requieren al menos 2 restricciones.',
            'max_constraints_reached': 'No se pueden agregar más restricciones (máximo 10).',
            'variable_name_placeholder': 'Nombre de variable',
            'enter_constraint': 'Ingrese restricción',
            'variable_name_invalid': 'El nombre de la variable debe comenzar con una letra y solo puede contener letras, números y guiones bajos.',
            'variable_name_exists': 'Ya existe una variable con ese nombre. Elige otro nombre.',
            'must_have_two_variables': 'Debe tener al menos 2 variables.',
            'must_add_one_constraint': 'Debe agregar al menos 1 restricción.',
            'complete_all_constraints': 'Por favor, complete todas las restricciones. Hay {count} restricción(es) vacía(s).',
            'confirm_clear_problem': '¿Estás seguro de que quieres limpiar todos los campos y comenzar un nuevo problema?',
            'constraint_label': 'Restricción',
            'original_mathematical_model_title': 'Modelo Matemático Original',
            'production_problem': 'Problema de Producción',
            'transport_problem': 'Problema de Transporte', 
            'manufacturing_problem': 'Problema de Manufactura',
            'example_loaded_successfully': 'cargado exitosamente',
            'iteration': 'Iteración',
            'base': 'Base',
            'premium_badge': 'PREMIUM',
            
            # Big M Method Documentation - Spanish
            'big_m_method_objective': 'El objetivo principal del método de la "M" es resolver problemas de programación lineal donde la solución inicial factible no está disponible, especialmente cuando se trata de restricciones de igualdad o desigualdad "mayor o igual que".',
            'big_m_advantages_title': 'Ventajas',
            'big_m_adv_1': 'Es capaz de solucionar cualquier modelo, sin importar si el origen no pertenece a la región factible.',
            'big_m_adv_2': 'No existe un límite de variables.',
            'big_m_adv_3': 'Se basa en el algoritmo sencillo del método simplex.',
            'big_m_adv_4': 'Detecta cualquier tipo de solución del problema.',
            'big_m_disadvantages_title': 'Desventajas',
            'big_m_disadv_1': 'Al meter variables artificiales implica que el modelo incrementa en tamaño.',
            'big_m_disadv_2': 'El manejo de la M puede hacer confuso u orilla a cometer errores.',
            'big_m_disadv_3': 'Implica más pasos que en el método simplex.',
            'big_m_use_situations': 'Situaciones de uso',
            'big_m_use_case_gte': 'Restricciones de tipo "≥" (mayor o igual)',
            'big_m_use_case_gte_desc': 'Cuando una restricción tiene el signo ≥, se resta una variable de holgura y se agrega una variable artificial para convertirla en ecuación.',
            'big_m_use_case_eq': 'Restricciones de tipo "=" (igualdad)',
            'big_m_use_case_eq_desc': 'Las restricciones de igualdad no permiten utilizar variables de holgura de forma directa, entonces se debe agregar una variable artificial para poder tener una base inicial.',
            'big_m_use_case_no_base': 'Cuando no se puede encontrar una base inicial factible',
            'big_m_use_case_no_base_desc': 'El método de la gran M fuerza una solución inicial artificial, penalizándola con un valor muy grande (la constante M) en la función objetivo.',
            'big_m_steps_title': 'Pasos para realizar el método',
            'big_m_step_1': '1. Escribir el problema en su forma estándar',
            'big_m_step_1_desc': 'Convertir todas las restricciones en igualdades:',
            'big_m_step_1_list_1': 'Para restricciones del tipo ≤: Se agrega una variable de holgura.',
            'big_m_step_1_list_2': 'Para restricciones del tipo ≥: Resta una variable y agrega una variable artificial.',
            'big_m_step_1_list_3': 'Para restricciones del tipo =: Agrega una variable artificial.',
            'big_m_step_2': '2. Modificar la función objetivo',
            'big_m_step_2_desc': 'Agrega las variables artificiales con un costo muy grande (M):',
            'big_m_step_2_list_1': 'Si es maximización: Resta M ⋅ Ai en la función objetivo, porque queremos que esas variables desaparezcan: penalizando el valor.',
            'big_m_step_2_list_2': 'Si es minimización: Suma M ⋅ Ai.',
            'big_m_step_3': '3. Construir la tabla inicial del método simplex',
            'big_m_step_3_list_1': 'Usa las restricciones en formas de ecuación.',
            'big_m_step_3_list_2': 'Coloca las variables básicas en columnas.',
            'big_m_step_3_list_3': 'Incluye la fila Z (fila de diferencias) con los coeficientes modificados.',
            'big_m_step_4': '4. Aplicar el método simplex',
            'big_m_step_4_list_1': 'Buscar la variable que entra a la base (La que tiene el valor más negativo en la fila Z)',
            'big_m_step_4_list_2': 'Buscar la variable que sale de la base (usando la prueba razón mínima).',
            'big_m_step_4_list_3': 'Pivoteo para obtener la nueva tabla.',
            'big_m_step_5': '5. Repetir iteraciones hasta que no haya más coeficientes negativos en la fila Z',
            'big_m_step_5_desc': 'Cuando todos los valores en la Fila Z son mayores a 0, se ha llegado a una solución óptima.',
            'big_m_step_6': '6. Revisar si las variables artificiales están en cero',
            'big_m_step_6_list_1': 'Si todas las variables artificiales son 0 al final, entonces la solución es factible y válida.',
            'big_m_step_6_list_2': 'Si alguna variable artificial queda con valor diferente a 0, el problema no tiene solución factible (es inconsistente con las restricciones).',
            'big_m_example_title': 'Ejemplo',
            'big_m_minimize_z': 'Minimizar Z = 3x₁ + 2x₂',
            'big_m_convert_standard': 'Convertir a forma estándar',
            'big_m_initial_table': 'Tabla inicial',
            'big_m_new_z_row': 'Nueva fila z = Anterior fila z + (100) * (fila R₁ + fila R₂)',
            'big_m_iteration_1': 'Iteración 1',
            'big_m_iteration_2': 'Iteración 2',
            'big_m_final_table': 'Tabla final',
            'big_m_optimal_solution': 'Solución óptima:',
            'big_m_for_z_row': 'Para fila Z:',
            'big_m_for_x1_row': 'Para fila x₁:',
            'big_m_for_x2_row': 'Para fila x₂:',
            'big_m_for_r2_row': 'Para fila R₂:',
            
            # Graphic Method Documentation - Spanish
            'graphic_method_objective': 'Solucionar problemas de programación lineal que se utiliza principalmente para casos con dos variables. Aunque no es muy práctico para una gran cantidad de variables, es muy útil para interpretar y analizar los resultados y la sensibilidad del problema.',
            'graphic_advantages_title': 'Ventajas',
            'graphic_adv_1': 'Capacidad para encontrar la mejor solución: En situaciones donde los recursos son limitados.',
            'graphic_adv_2': 'Optimización de recursos: Permite maximizar el uso de recursos limitados, como tiempo, dinero y materiales.',
            'graphic_adv_3': 'Facilidad de implementación: Con el uso de software especializado, se puede implementar de manera eficiente en diversos escenarios.',
            'graphic_adv_4': 'Flexibilidad: Es posible ajustar los parámetros y restricciones para adaptarse a diferentes situaciones y necesidades.',
            'graphic_disadvantages_title': 'Desventajas',
            'graphic_disadv_1': 'Complejidad computacional: En algunos casos, resolver problemas puede requerir una gran cantidad de recursos computacionales.',
            'graphic_disadv_2': 'Limitaciones en la modelización: Algunas situaciones del mundo real pueden no ajustarse perfectamente al modelo lineal, lo que puede llevar a soluciones subóptimas.',
            'graphic_disadv_3': 'Sensibilidad a los datos de entrada: Pequeños cambios en los datos de entrada pueden tener un impacto significativo en los resultados, lo que requiere un análisis cuidadoso.',
            'graphic_use_situations': 'Situaciones de uso',
            'graphic_use_desc': 'Esta herramienta es ampliamente utilizada en campos como la economía, la ingeniería, la logística y más. Las situaciones más comunes donde se aplica el método gráfico son:',
            'graphic_use_case_products': 'Optimización de productos',
            'graphic_use_case_products_desc': 'Determinar la combinación óptima de productos para maximizar beneficios.',
            'graphic_use_case_mixtures': 'Mezclas y formulaciones',
            'graphic_use_case_mixtures_desc': 'Encontrar la combinación óptima de ingredientes o componentes.',
            'graphic_use_case_allocation': 'Asignación de recursos',
            'graphic_use_case_allocation_desc': 'Distribuir recursos limitados entre diferentes actividades o departamentos.',
            'graphic_use_case_transport': 'Problemas de transporte',
            'graphic_use_case_transport_desc': 'Optimizar rutas y costos de transporte.',
            'graphic_use_case_production': 'Planificación de la producción',
            'graphic_use_case_production_desc': 'Programar la producción para maximizar la eficiencia.',
            'graphic_use_case_costs': 'Optimización de costos',
            'graphic_use_case_costs_desc': 'Minimizar costos mientras se cumplen los requisitos de producción.',
            'graphic_algorithm_steps': 'Pasos para realizar el algoritmo',
            'graphic_step_1': '1. Formulación del problema',
            'graphic_step_1_desc': 'Definir las variables de decisión, la función objetivo y las restricciones.',
            'graphic_step_2': '2. Gráfico de las restricciones',
            'graphic_step_2_desc': 'Representar gráficamente cada una de las restricciones en un sistema de coordenadas.',
            'graphic_step_3': '3. Identificación de la región factible',
            'graphic_step_3_desc': 'Determinar el área donde se satisfacen todas las restricciones simultáneamente.',
            'graphic_step_4': '4. Búsqueda de la solución óptima',
            'graphic_step_4_desc': 'Encontrar el punto (o puntos) en la región factible que maximiza o minimiza la función objetivo.',
            'graphic_step_5': '5. Análisis de la solución',
            'graphic_step_5_desc': 'Interpretar los resultados y verificar su validez en el contexto del problema.',
            'graphic_example_title': 'Ejemplo',
            'graphic_example_company': 'La fábrica de hilados y tejidos Salazar requiere fabricar dos tejidos de calidad diferente, estándar y premium; se dispone de:',
            'graphic_materials_available': '500 kg de hilo A, 300 kg de hilo B, 108 kg de hilo C',
            'graphic_requirements_title': 'Requisitos por metro de tejido:',
            'graphic_standard_req': 'Estándar: 125 gr de A, 150 gr de B y 75 gr de C',
            'graphic_premium_req': 'Premium: 200 gr de A, 100 gr de B y 27 gr de C',
            'graphic_prices_title': 'Precios de venta:',
            'graphic_standard_price': 'Estándar: $4,000 por metro',
            'graphic_premium_price': 'Premium: $5,000 por metro',
            'graphic_variables_title': 'Variables:',
            'graphic_var_x': 'X: cantidad de metros diarios de tejido tipo estándar',
            'graphic_var_y': 'Y: cantidad de metros diarios de tejido tipo premium',
            'graphic_constraints_title': 'Restricciones:',
            'graphic_constraint_a': '0.12x + 0.2y ≤ 500  (kg de hilo A)',
            'graphic_constraint_b': '0.15x + 0.1y ≤ 300  (kg de hilo B)',
            'graphic_constraint_c': '0.075x + 0.027y ≤ 108  (kg de hilo C)',
            'graphic_non_negativity': 'x, y ≥ 0  (restricciones de no negatividad)',
            'graphic_objective_function': 'Función objetivo:',
            'graphic_obj_func': 'Z max = 4000x + 5000y  (máximos ingresos totales)',
            'graphic_step2_title': 'Paso 2: Gráfico de las restricciones',
            'graphic_step2_desc': 'Igualamos las restricciones a 0 para encontrar los puntos de corte:',
            'graphic_restriction_1': 'Restricción 1 (Hilo A):',
            'graphic_restriction_2': 'Restricción 2 (Hilo B):',
            'graphic_restriction_3': 'Restricción 3 (Hilo C):',
            'graphic_step3_title': 'Paso 3: Identificación de la región factible',
            'graphic_step3_desc': 'Con las coordenadas encontradas anteriormente:',
            'graphic_step3_coords': 'Restricción 1 (Hilo A): (0, 2500) y (4167, 0), Restricción 2 (Hilo B): (0, 3000) y (2000, 0), Restricción 3 (Hilo C): (0, 4000) y (1440, 0)',
            'graphic_chart_caption': 'Gráfico que muestra las restricciones y la región factible',
            'graphic_step4_title': 'Paso 4: Búsqueda de la solución óptima',
            'graphic_step4_desc': 'Encontramos la intersección de las restricciones 1 y 2:',
            'graphic_equation_1': 'Ecuación 1: 0.12x + 0.2y = 500',
            'graphic_equation_2': 'Ecuación 2: 0.15x + 0.1y = 300 (multiplicamos por -2)',
            'graphic_equation_2_mod': 'Ecuación 2 modificada: -0.30x - 0.2y = -600',
            'graphic_sum_equations': 'Sumamos 1 y 2 modificada: -0.18x = -100',
            'graphic_solve_x': 'Despejamos x: x = -100 / -0.18 ≈ 555.55',
            'graphic_solve_y_desc': 'Reemplazamos x = 555.55 en la ecuación 1 para encontrar y:',
            'graphic_solve_y_steps': '0.12(555.55) + 0.2y = 500, 66.666 + 0.2y = 500, 0.2y = 500 - 66.666 = 433.334, y = 433.334 / 0.2 ≈ 2166.67',
            'graphic_step5_title': 'Paso 5: Análisis de la solución',
            'graphic_contribution_desc': 'La contribución obtenida (reemplazando las variables en la función objetivo) es de:',
            'graphic_z_calc': 'Z max = 4000x + 5000y, Z max = 4000(555.55) + 5000(2166.67), Z max ≈ $13,055,550',
            'graphic_optimal_solution': 'Solución óptima:',
            'graphic_standard_result': 'Tejido estándar (x): ≈ 556 metros',
            'graphic_premium_result': 'Tejido premium (y): ≈ 2167 metros',
            'graphic_max_profit': 'Máxima ganancia: ≈ $13,055,550',
            'graphic_conclusion': 'Esto significa que deben producir aproximadamente 556 metros de estándar y 2167 metros de premium para obtener la máxima ganancia.',
            
            # Additional translation keys for coordinates and formulas
            'when_x_equals_zero': 'Cuando x = 0',
            'when_y_equals_zero': 'Cuando y = 0',
        },
        'en': {
            'inicio': 'Home',
            'logout': 'Logout',
            'profile': 'Profile',
            'premium': 'Premium',
            'store': 'Store',
            'documentation': 'Documentation',
            'history': 'History',
            'spanish': 'Spanish',
            'english': 'English',
            'language': 'Language',
            'methods': 'Methods',
            'fixed_point': 'Fixed Point',
            'cubic_spline': 'Cubic Spline',
            'simplex': 'Simplex',
            'graphic_method': 'Graphic Method',
            'gran_m': 'Big M',
            'welcome': 'Welcome',
            'numerical_methods': 'Numerical Methods',
            'solver': 'Solver',
            'credits': 'Credits',
            'export_pdf': 'Export PDF',
            'calculate': 'Calculate',
            'clear': 'Clear',
            'save': 'Save',
            'edit': 'Edit',
            'delete': 'Delete',
            'close': 'Close',
            'error': 'Error',
            'success': 'Success',
            'warning': 'Warning',
            'info': 'Information',
            'loading': 'Loading...',
            'search': 'Search',
            'filters': 'Filters',
            'date': 'Date',
            'user': 'User',
            'result': 'Result',
            'details': 'Details',
            'back': 'Back',
            'next': 'Next',
            'previous': 'Previous',
            'page': 'Page',
            'total': 'Total',
            'no_data': 'No data available',
            'confirm': 'Confirm',
            'cancel': 'Cancel',
            # Traducciones para index
            'index_title': 'Numerical Methods',
            'fixed_point_desc': 'Iterative method to find equation roots',
            'cubic_spline_desc': 'Cubic spline interpolation',
            'premium_store': 'Premium Store',
            'premium_store_desc': 'Unlock advanced features',
            'docs_cubic': 'Spline Docs',
            'docs_cubic_desc': 'Technical documentation of the method',
            'docs_fixed_point': 'Fixed Point Docs',
            'docs_fixed_point_desc': 'Theory and examples of the method',
            'user_registration': 'User Registration',
            'user_registration_desc': 'Create an account with your data and profile picture',
            'my_profile': 'My Profile',
            'my_profile_desc': 'View and manage your personal data',
            'edit_profile': 'Edit Profile',
            'edit_profile_desc': 'Update your information and photograph',
            'project_credits': 'Project Credits',
            'project_credits_desc': 'Meet the developers and their roles',
            'simplex_method': 'Simplex Method',
            'simplex_method_desc': 'Linear optimization using the simplex method',
            'docs_simplex': 'Simplex Method Docs',
            'docs_simplex_desc': 'Technical documentation of the method',
            'docs_big_m': 'Big M Method Docs',
            'docs_big_m_desc': 'Technical documentation of the method',
            'docs_graphic': 'Graphic Method Docs',
            'docs_graphic_desc': 'Technical documentation of the method',
            'graphic_method_nav': 'Graphic Method',
            'big_m_method': 'Big M Method',
            # Simplex Method Page
            'simplex_title': 'Simplex Method',
            'view_history': 'View History',
            'simplex_limitations': 'General Simplex Method Limitations',
            'maximization': 'Maximization',
            'minimization': 'Minimization',
            'only_le_constraints': 'Only ≤ (less than or equal) constraints',
            'requires_advanced': 'Requires advanced methods (Big M or Two Phases)',
            'bj_values': 'Bj Values',
            'non_negative': 'Must be non-negative',
            'conditions_note': 'If your problem doesn\'t meet these conditions, use the Big M Method.',
            'preloaded_examples': 'Preloaded Examples',
            'production_example': 'Example 1: Production',
            'transport_example': 'Example 2: Transport',
            'manufacturing_example': 'Example 3: Manufacturing',
            'tip_examples': 'Click on any example to load the data automatically. Then you can edit them before solving.',
            'problem_variables': 'Problem variables (maximum 10)',
            'add_variable': 'Add Variable',
            'remove_variable': 'Remove Variable',
            'variable_examples': 'Name examples: dogs, trucks, h, product_A, x1, etc. Only letters, numbers and underscores.',
            'objective_function': 'Objective function (Z)',
            'maximize': 'Maximize',
            'subject_to': 'Subject to (maximum 10 constraints)',
            'add_constraint': 'Add Constraint',
            'remove_constraint': 'Remove Constraint',
            'constraints_counter': 'constraints',
            'solve': 'Solve',
            'new_problem': 'New Problem',
            'free_version_warning': 'Free Version - Final Result Only',
            'premium_benefits': 'You\'re viewing the limited version. With Premium you can access:',
            'detailed_iterations': 'All detailed algorithm iterations',
            'complete_model': 'Complete mathematical model with slack variables',
            'step_by_step': 'Step-by-step process of each operation',
            'all_tables': 'Initial table and all intermediate tables',
            'upgrade_premium': 'Upgrade to Premium',
            # Documentation Pages
            'simplex_documentation': 'Simplex Method Documentation',
            'big_m_documentation': 'Big M Method Documentation',
            'graphic_documentation': 'Graphic Method Documentation',
            'back_to_home': 'Home',
            
            # Contenido de documentación Simplex en inglés
            'method_objective': 'Method objective',
            'method_objective_desc': 'Find the optimal solution for a linear programming problem, whether maximization or minimization of a cost function, profits, production, being subject to certain constraints. Looking for the best point within a defined space with respect to those constraints that meet the optimization criteria.',
            'advantages': 'Advantages',
            'adv_1': 'It is based on geometric considerations and does not require the use of derivatives of the objective function.',
            'adv_2': 'It is easy to use and has a high degree of effectiveness.',
            'adv_3': 'It can be used with objective functions since the first iterations broadly seek the minimum and easily avoid minima.',
            'adv_4': 'It is efficient and adjusts to various parameters.',
            'adv_5': 'Guarantees an optimal solution or determines that there is no solution.',
            'disadvantages': 'Disadvantages',
            'disadv_1': 'Although efficient for linear problems, it may not be suitable for problems with nonlinear functions or nonlinear constraints.',
            'disadv_2': 'The initial choice of the basic solution can affect the performance of the method, finding a good initial solution can be difficult in certain cases.',
            'disadv_3': 'In very large or complex problems the simplex method may need a significant amount of computational resources which can limit its application.',
            'use_situations': 'Use situations',
            'use_case_production': 'Production planning',
            'use_case_production_desc': 'Determine the optimal quantity of different products to manufacture to maximize profits or minimize costs.',
            'use_case_inventory': 'Inventory management',
            'use_case_inventory_desc': 'Decide optimal inventory levels to meet demand while minimizing storage costs.',
            'use_case_resources': 'Resource allocation',
            'use_case_resources_desc': 'Helps allocate budget optimally among different channels and media.',
            'use_case_costs': 'Cost optimization',
            'use_case_costs_desc': 'Find the most economical way to perform a task or process, considering different variables and constraints.',
            'algorithm_steps': 'Steps to perform the algorithm',
            'step_1': '1. Define the problem in standard form and generate matrix',
            'step_1_desc': 'A linear programming program has the following form:',
            'objective_function_doc': 'Objective function:',
            'maximize_minimize': '(Maximize or minimize)',
            'subject_to_doc': 'Subject to:',
            'where_variables': 'Where x₁, x₂, ..., xₙ are the problem variables and then verify that all constraints have the non-negative right side, that is:',
            'add_slack_variables': 'Add slack variables:',
            'converts_restrictions': 'Converts constraints into equations.',
            'example_doc': 'Example:',
            'step_2': '2. Build the initial Simplex table',
            'includes': 'Includes:',
            'basic_variables': 'Basic variables (BV)',
            'objective_coefficients': 'Objective function coefficients (Z)',
            'restriction_coefficients': 'Constraint coefficients',
            'right_side_results': 'Right-hand side results (RHS)',
            'z_c_row': '"Z - C" row',
            'step_3': '3. Identify the pivot column (entering variable)',
            'step_3_desc': 'Select the most negative coefficient in the Z - C row. It is the variable that will enter the base.',
            'step_4': '4. Identify the pivot row (exiting variable)',
            'step_4_desc_1': 'Divide the right-hand side values by the positive values of the pivot column.',
            'step_4_desc_2': 'Choose the smallest positive coefficient. That row corresponds to the variable that leaves the base.',
            'step_5': '5. Perform pivoting (update the table)',
            'step_5_desc_1': 'When all elements of Z - C are greater than or equal to 0 (for maximization), the solution is optimal.',
            'step_5_desc_2': 'The optimal value is in the RHS column, corresponding to Z.',
            'step_5_desc_3': 'Basic variables give their value in the solution, non-basic variables are zero.',
            'add_slack_variables_example': 'Add slack variables s₁ and s₂',
            'rewrite_objective': 'Rewrite the objective function:',
            'initial_simplex_table': 'Initial Simplex table',
            'outgoing_variable': 'Outgoing variable:',
            'pivot_number': 'Pivot number:',
            'update_table': 'Update table (pivoting)',
            'new_row': 'New row',
            'final_result': 'Final result',
            
            # Simplex Historial Page
            'simplex_history': 'Simplex Method History',
            'no_history_data': 'No data in history',
            'calculation_date': 'Calculation Date',
            'objective_type': 'Objective Type',
            'objective_function_label': 'Objective Function',
            'restrictions_label': 'Restrictions',
            'optimal_solution': 'Optimal Solution',
            'z_value': 'Z Value',
            'view_details': 'View Details',
            'repeat_calculation': 'Repeat Calculation',
            'delete_record': 'Delete',
            'premium_history_note': 'With Premium you can view all detailed iterations',
            'go_to_simplex': 'Go to Simplex Method',
            'confirm_delete': 'Are you sure you want to delete this record?',
            'no_data_message': 'You haven\'t solved any problems with the Simplex method yet',
            'start_calculating': 'Start by calculating your first problem',
            
            # Common Documentation Terms
            'method_objective': 'Method objective',
            'advantages': 'Advantages',
            'disadvantages': 'Disadvantages',
            'when_to_use': 'When to use this method',
            'step_by_step': 'Step by step procedure',
            'examples': 'Examples',
            'bibliography': 'Bibliography',
            'references': 'References',
            'mathematical_formulation': 'Mathematical Formulation',
            'algorithm_description': 'Algorithm Description',
            'optimal_variables': 'Optimal Variables',
            'load_problem': 'Load Problem',
            'export_pdf': 'Export PDF',
            'premium_feature_locked': 'Premium Feature',
            'no_problems_history': 'No problems in history',
            'solve_first_problem': 'Solve your first simplex method problem to see the history here.',
            'solve_first_problem_btn': 'Solve First Problem',
            'limited_functionality': 'Limited Functionality',
            'free_user_note': 'As a free user, you can only see the final results of your previous problems.',
            'with_premium': 'With Premium you can:',
            'view_iterations': 'View all iterations step by step',
            'access_complete_process': 'Access the complete resolution process',
            'detailed_analysis': 'Detailed analysis of each table',
            'restrictions': 'Restrictions',
            'original_mathematical_model': 'Original Mathematical Model',
            'initial_table_title': 'Initial Simplex Method Table',
            'final_result': 'Final Result',
            'iteration': 'Iteration',
            'table': 'Table',
            'general_objective_function': 'Objective Function in General Form',
            'function_z_zero': 'Function Z equated to zero',
            'model_with_slack_variables': 'Model with Slack Variables',
            'algorithm_iterations': 'Algorithm Iterations',
            'entering_variable': 'Entering variable',
            'leaving_variable': 'Leaving variable',
            'pivot_element': 'Pivot element',
            'operations_performed': 'Operations performed',
            'normalization_of': 'Normalization of',
            'update_of': 'Update of',
            'factor': 'factor',
            'optimal_solution_found': 'Optimal Solution Found!',
            'all_coefficients_non_negative': 'All coefficients in row Z are non-negative.',
            'optimal_solution_title': 'Optimal Solution',
            'maximum_value_z': 'Maximum value of Z',
            'minimum_value_z': 'Minimum value of Z',
            'results_interpretation': 'Results Interpretation',
            'decision_variables': 'Decision variables',
            'decision_variables_desc': 'The optimal values of the original problem variables',
            'slack_variables': 'Slack variables',
            'slack_variables_desc': 'Represent the unused resources in each constraint',
            'z_value_max_desc': 'The maximum value reached by the objective function',
            'z_value_min_desc': 'The minimum value reached by the objective function',
            'iterations_desc': 'Each step of the algorithm shows how the solution is improved',
            'original_objective_function': 'Objective function',
            'restrictions_label_colon': 'Restrictions',
            'error_title': 'Error',
            'please_enter_objective_function': 'Please enter the objective function.',
            'min_two_variables_required': 'At least 2 variables are required.',
            'max_variables_reached': 'Cannot add more variables (maximum 10).',
            'min_two_constraints_required': 'At least 2 constraints are required.',
            'max_constraints_reached': 'Cannot add more constraints (maximum 10).',
            'variable_name_placeholder': 'Variable name',
            'enter_constraint': 'Enter constraint',
            'variable_name_invalid': 'Variable name must start with a letter and can only contain letters, numbers and underscores.',
            'variable_name_exists': 'A variable with that name already exists. Choose another name.',
            'must_have_two_variables': 'Must have at least 2 variables.',
            'must_add_one_constraint': 'Must add at least 1 constraint.',
            'complete_all_constraints': 'Please complete all constraints. There are {count} empty constraint(s).',
            'confirm_clear_problem': 'Are you sure you want to clear all fields and start a new problem?',
            'constraint_label': 'Constraint',
            'original_mathematical_model_title': 'Original Mathematical Model',
            'production_problem': 'Production Problem',
            'transport_problem': 'Transport Problem',
            'manufacturing_problem': 'Manufacturing Problem',
            'example_loaded_successfully': 'loaded successfully',
            'iteration': 'Iteration',
            'base': 'Base',
            'premium_badge': 'PREMIUM',
            
            # Big M Method Documentation - English
            'big_m_method_objective': 'The main objective of the "M" method is to solve linear programming problems where the initial feasible solution is not available, especially when dealing with equality constraints or "greater than or equal" inequality constraints.',
            'big_m_advantages_title': 'Advantages',
            'big_m_adv_1': 'It is able to solve any model, regardless of whether the origin does not belong to the feasible region.',
            'big_m_adv_2': 'There is no limit on variables.',
            'big_m_adv_3': 'It is based on the simple algorithm of the simplex method.',
            'big_m_adv_4': 'It detects any type of solution to the problem.',
            'big_m_disadvantages_title': 'Disadvantages',
            'big_m_disadv_1': 'Adding artificial variables implies that the model increases in size.',
            'big_m_disadv_2': 'Handling M can be confusing or lead to errors.',
            'big_m_disadv_3': 'It involves more steps than the simplex method.',
            'big_m_use_situations': 'Use situations',
            'big_m_use_case_gte': 'Constraints of type "≥" (greater than or equal)',
            'big_m_use_case_gte_desc': 'When a constraint has the ≥ sign, a slack variable is subtracted and an artificial variable is added to convert it into an equation.',
            'big_m_use_case_eq': 'Constraints of type "=" (equality)',
            'big_m_use_case_eq_desc': 'Equality constraints do not allow the direct use of slack variables, so an artificial variable must be added to have an initial base.',
            'big_m_use_case_no_base': 'When an initial feasible base cannot be found',
            'big_m_use_case_no_base_desc': 'The big M method forces an artificial initial solution, penalizing it with a very large value (the constant M) in the objective function.',
            'big_m_steps_title': 'Steps to perform the method',
            'big_m_step_1': '1. Write the problem in its standard form',
            'big_m_step_1_desc': 'Convert all constraints into equalities:',
            'big_m_step_1_list_1': 'For constraints of type ≤: Add a slack variable.',
            'big_m_step_1_list_2': 'For constraints of type ≥: Subtract a variable and add an artificial variable.',
            'big_m_step_1_list_3': 'For constraints of type =: Add an artificial variable.',
            'big_m_step_2': '2. Modify the objective function',
            'big_m_step_2_desc': 'Add artificial variables with a very large cost (M):',
            'big_m_step_2_list_1': 'If maximization: Subtract M ⋅ Ai in the objective function, because we want those variables to disappear: penalizing the value.',
            'big_m_step_2_list_2': 'If minimization: Add M ⋅ Ai.',
            'big_m_step_3': '3. Build the initial simplex method table',
            'big_m_step_3_list_1': 'Use constraints in equation form.',
            'big_m_step_3_list_2': 'Place basic variables in columns.',
            'big_m_step_3_list_3': 'Include the Z row (difference row) with modified coefficients.',
            'big_m_step_4': '4. Apply the simplex method',
            'big_m_step_4_list_1': 'Find the variable that enters the base (The one with the most negative value in row Z)',
            'big_m_step_4_list_2': 'Find the variable that leaves the base (using the minimum ratio test).',
            'big_m_step_4_list_3': 'Pivoting to obtain the new table.',
            'big_m_step_5': '5. Repeat iterations until there are no more negative coefficients in row Z',
            'big_m_step_5_desc': 'When all values in Row Z are greater than 0, an optimal solution has been reached.',
            'big_m_step_6': '6. Check if artificial variables are at zero',
            'big_m_step_6_list_1': 'If all artificial variables are 0 at the end, then the solution is feasible and valid.',
            'big_m_step_6_list_2': 'If any artificial variable remains with a value other than 0, the problem has no feasible solution (it is inconsistent with the constraints).',
            'big_m_example_title': 'Example',
            'big_m_minimize_z': 'Minimize Z = 3x₁ + 2x₂',
            'big_m_convert_standard': 'Convert to standard form',
            'big_m_initial_table': 'Initial table',
            'big_m_new_z_row': 'New z row = Previous z row + (100) * (R₁ row + R₂ row)',
            'big_m_iteration_1': 'Iteration 1',
            'big_m_iteration_2': 'Iteration 2',
            'big_m_final_table': 'Final table',
            'big_m_optimal_solution': 'Optimal solution:',
            'big_m_for_z_row': 'For Z row:',
            'big_m_for_x1_row': 'For x₁ row:',
            'big_m_for_x2_row': 'For x₂ row:',
            'big_m_for_r2_row': 'For R₂ row:',
            
            # Graphic Method Documentation - English
            'graphic_method_objective': 'Solve linear programming problems primarily used for cases with two variables. Although not very practical for a large number of variables, it is very useful for interpreting and analyzing results and sensitivity of the problem.',
            'graphic_advantages_title': 'Advantages',
            'graphic_adv_1': 'Ability to find the best solution: In situations where resources are limited.',
            'graphic_adv_2': 'Resource optimization: Allows maximizing the use of limited resources such as time, money and materials.',
            'graphic_adv_3': 'Ease of implementation: With the use of specialized software, it can be implemented efficiently in various scenarios.',
            'graphic_adv_4': 'Flexibility: It is possible to adjust parameters and constraints to adapt to different situations and needs.',
            'graphic_disadvantages_title': 'Disadvantages',
            'graphic_disadv_1': 'Computational complexity: In some cases, solving problems may require a large amount of computational resources.',
            'graphic_disadv_2': 'Modeling limitations: Some real-world situations may not fit perfectly into the linear model, which can lead to suboptimal solutions.',
            'graphic_disadv_3': 'Sensitivity to input data: Small changes in input data can have a significant impact on results, requiring careful analysis.',
            'graphic_use_situations': 'Use situations',
            'graphic_use_desc': 'This tool is widely used in fields such as economics, engineering, logistics and more. The most common situations where the graphic method is applied are:',
            'graphic_use_case_products': 'Product optimization',
            'graphic_use_case_products_desc': 'Determine the optimal combination of products to maximize profits.',
            'graphic_use_case_mixtures': 'Mixtures and formulations',
            'graphic_use_case_mixtures_desc': 'Find the optimal combination of ingredients or components.',
            'graphic_use_case_allocation': 'Resource allocation',
            'graphic_use_case_allocation_desc': 'Distribute limited resources among different activities or departments.',
            'graphic_use_case_transport': 'Transportation problems',
            'graphic_use_case_transport_desc': 'Optimize routes and transportation costs.',
            'graphic_use_case_production': 'Production planning',
            'graphic_use_case_production_desc': 'Schedule production to maximize efficiency.',
            'graphic_use_case_costs': 'Cost optimization',
            'graphic_use_case_costs_desc': 'Minimize costs while meeting production requirements.',
            'graphic_algorithm_steps': 'Steps to perform the algorithm',
            'graphic_step_1': '1. Problem formulation',
            'graphic_step_1_desc': 'Define decision variables, objective function and constraints.',
            'graphic_step_2': '2. Graphing constraints',
            'graphic_step_2_desc': 'Graphically represent each constraint in a coordinate system.',
            'graphic_step_3': '3. Identification of feasible region',
            'graphic_step_3_desc': 'Determine the area where all constraints are satisfied simultaneously.',
            'graphic_step_4': '4. Search for optimal solution',
            'graphic_step_4_desc': 'Find the point(s) in the feasible region that maximizes or minimizes the objective function.',
            'graphic_step_5': '5. Solution analysis',
            'graphic_step_5_desc': 'Interpret the results and verify their validity in the context of the problem.',
            'graphic_example_title': 'Example',
            'graphic_example_company': 'Salazar textile and yarn factory needs to manufacture two different quality fabrics, standard and premium; available materials:',
            'graphic_materials_available': '500 kg of yarn A, 300 kg of yarn B, 108 kg of yarn C',
            'graphic_requirements_title': 'Requirements per meter of fabric:',
            'graphic_standard_req': 'Standard: 125 gr of A, 150 gr of B and 75 gr of C',
            'graphic_premium_req': 'Premium: 200 gr of A, 100 gr of B and 27 gr of C',
            'graphic_prices_title': 'Sale prices:',
            'graphic_standard_price': 'Standard: $4,000 per meter',
            'graphic_premium_price': 'Premium: $5,000 per meter',
            'graphic_variables_title': 'Variables:',
            'graphic_var_x': 'X: daily quantity of standard fabric meters',
            'graphic_var_y': 'Y: daily quantity of premium fabric meters',
            'graphic_constraints_title': 'Constraints:',
            'graphic_constraint_a': '0.12x + 0.2y ≤ 500  (kg of yarn A)',
            'graphic_constraint_b': '0.15x + 0.1y ≤ 300  (kg of yarn B)',
            'graphic_constraint_c': '0.075x + 0.027y ≤ 108  (kg of yarn C)',
            'graphic_non_negativity': 'x, y ≥ 0  (non-negativity constraints)',
            'graphic_objective_function': 'Objective function:',
            'graphic_obj_func': 'Z max = 4000x + 5000y  (maximum total revenue)',
            'graphic_step2_title': 'Step 2: Graphing constraints',
            'graphic_step2_desc': 'We equate the constraints to 0 to find the intersection points:',
            'graphic_restriction_1': 'Constraint 1 (Yarn A):',
            'graphic_restriction_2': 'Constraint 2 (Yarn B):',
            'graphic_restriction_3': 'Constraint 3 (Yarn C):',
            'graphic_step3_title': 'Step 3: Identification of feasible region',
            'graphic_step3_desc': 'With the coordinates found previously:',
            'graphic_step3_coords': 'Constraint 1 (Yarn A): (0, 2500) and (4167, 0), Constraint 2 (Yarn B): (0, 3000) and (2000, 0), Constraint 3 (Yarn C): (0, 4000) and (1440, 0)',
            'graphic_chart_caption': 'Graph showing constraints and feasible region',
            'graphic_step4_title': 'Step 4: Search for optimal solution',
            'graphic_step4_desc': 'We find the intersection of constraints 1 and 2:',
            'graphic_equation_1': 'Equation 1: 0.12x + 0.2y = 500',
            'graphic_equation_2': 'Equation 2: 0.15x + 0.1y = 300 (multiply by -2)',
            'graphic_equation_2_mod': 'Modified equation 2: -0.30x - 0.2y = -600',
            'graphic_sum_equations': 'Add 1 and modified 2: -0.18x = -100',
            'graphic_solve_x': 'Solve for x: x = -100 / -0.18 ≈ 555.55',
            'graphic_solve_y_desc': 'We substitute x = 555.55 in equation 1 to find y:',
            'graphic_solve_y_steps': '0.12(555.55) + 0.2y = 500, 66.666 + 0.2y = 500, 0.2y = 500 - 66.666 = 433.334, y = 433.334 / 0.2 ≈ 2166.67',
            'graphic_step5_title': 'Step 5: Solution analysis',
            'graphic_contribution_desc': 'The contribution obtained (replacing the variables in the objective function) is:',
            'graphic_z_calc': 'Z max = 4000x + 5000y, Z max = 4000(555.55) + 5000(2166.67), Z max ≈ $13,055,550',
            'graphic_optimal_solution': 'Optimal solution:',
            'graphic_standard_result': 'Standard fabric (x): ≈ 556 meters',
            'graphic_premium_result': 'Premium fabric (y): ≈ 2167 meters',
            'graphic_max_profit': 'Maximum profit: ≈ $13,055,550',
            'graphic_conclusion': 'This means they should produce approximately 556 meters of standard and 2167 meters of premium to obtain maximum profit.',
            
            # Additional translation keys for coordinates and formulas
            'when_x_equals_zero': 'When x = 0',
            'when_y_equals_zero': 'When y = 0',
        }
    }
    
    return {
        'current_language': current_language,
        'translations': translations.get(current_language, translations['es']),
        'available_languages': [
            {'code': 'es', 'name': translations[current_language]['spanish']},
            {'code': 'en', 'name': translations[current_language]['english']},
        ]
    }
